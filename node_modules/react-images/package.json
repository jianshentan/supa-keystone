{
  "_args": [
    [
      {
        "raw": "react-images@https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
        "scope": null,
        "escapedName": "react-images",
        "name": "react-images",
        "rawSpec": "https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
        "spec": "https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
        "type": "remote"
      },
      "/home/ubuntu/workspace"
    ]
  ],
  "_from": "react-images@0.5.1",
  "_id": "react-images@0.5.1",
  "_inCache": true,
  "_location": "/react-images",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-images@https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
    "scope": null,
    "escapedName": "react-images",
    "name": "react-images",
    "rawSpec": "https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
    "spec": "https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/keystone"
  ],
  "_resolved": "https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
  "_shasum": "a01ba3e059009d4241bbf8a3774775fbb9821341",
  "_shrinkwrap": null,
  "_spec": "react-images@https://registry.npmjs.org/react-images/-/react-images-0.5.1.tgz",
  "_where": "/home/ubuntu/workspace",
  "author": {
    "name": "Joss Mackison"
  },
  "browserify-shim": {
    "react": "global:React"
  },
  "bugs": {
    "url": "https://github.com/jossmac/react-images/issues"
  },
  "dependencies": {
    "aphrodite": "^0.5.0",
    "react-addons-css-transition-group": "^15.3.0"
  },
  "description": "A simple, responsive lightbox component for displaying an array of images with React.js",
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-eslint": "^6.0.4",
    "eslint": "2.9.0",
    "eslint-config-keystone": "2.2.0",
    "eslint-plugin-react": "5.1.1",
    "gulp": "^3.9.0",
    "react": "^15.3.0",
    "react-component-gulp-tasks": "^0.7.0",
    "react-dom": "^15.3.0"
  },
  "homepage": "http://jossmac.github.io/react-images",
  "keywords": [
    "react",
    "react-component",
    "react-images",
    "react-lightbox",
    "react-carousel",
    "react-gallery",
    "react images",
    "react lightbox",
    "react carousel",
    "react gallery",
    "lightbox",
    "carousel",
    "gallery"
  ],
  "license": "MIT",
  "main": "lib/Lightbox.js",
  "name": "react-images",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-dom": "^0.14 || ^15.0",
    "react": "^0.14 || ^15.0"
  },
  "readme": "# React Images\n\n[![Join the chat at https://gitter.im/react-images/Lobby](https://badges.gitter.im/react-images/Lobby.svg)](https://gitter.im/react-images/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA simple, responsive lightbox component for displaying an array of images.\n\n\n## Quick start\n\n```jsx\nimport React from 'react';\nimport Lightbox from 'react-images';\n\nexport default class Sample extends React.Component {\n  ...\n  render() {\n    return (\n      <Lightbox\n        images={[{ src: 'http://example.com/img1.jpg' }, { src: 'http://example.com/img2.jpg' }]}\n        isOpen={this.state.lightboxIsOpen}\n        onClickPrev={this.gotoPrevious}\n        onClickNext={this.gotoNext}\n        onClose={this.closeLightbox}\n      />\n    );\n  }\n}\n```\n\n\n## Demo & Examples\n\nLive demo: [jossmac.github.io/react-images](http://jossmac.github.io/react-images/)\n\nTo build the examples locally, run:\n\n```\nnpm install\nnpm start\n```\n\nThen open [`localhost:8000`](http://localhost:8000) in a browser.\n\n### Using srcset\n\nExample using srcset:\n```jsx\n<Lightbox\n  images={LIGHTBOX_IMAGE_SET}\n  ...\n/>\n\nconst LIGHTBOX_IMAGE_SET = [\n  {\n    src: 'http://example.com/example/img1.jpg',\n    srcset: [\n      'http://example.com/example/img1_1024.jpg 1024w',\n      'http://example.com/example/img1_800.jpg 800w',\n      'http://example.com/example/img1_500.jpg 500w',\n      'http://example.com/example/img1_320.jpg 320w',\n    ],\n  },\n  {\n    src: 'http://example.com/example/img2.jpg',\n    srcset: [\n      'http://example.com/example/img2_1024.jpg 1024w',\n      'http://example.com/example/img2_800.jpg 800w',\n      'http://example.com/example/img2_500.jpg 500w',\n      'http://example.com/example/img2_320.jpg 320w',\n    ],\n  }\n];\n\n```\n\nNotes on srcset support:\n\nThe srcset attribute is supported by some modern browsers.  Results of browser implementation and behaviour may vary. The sizes attribute uses the default maxWidth CSS property set to the image.  By default this is 80% so 80vw.\n\nAnother thing to note is that 'h' or height in the srcset attribute does not yet exist. Because of the nature of the fixed height of a Lightbox this is problematic for portrait sized images.  You will need to calculate what the best 'w' size for a portrait size ought to be given the height of the fixed viewport otherwise unnecessarily large images will be fetched. See issue: [https://github.com/ResponsiveImagesCG/picture-element/issues/86](https://github.com/ResponsiveImagesCG/picture-element/issues/86)\n\nRead more about the srcset and sizes attributes here: [https://ericportis.com/posts/2014/srcset-sizes/](https://ericportis.com/posts/2014/srcset-sizes/).\n\n### Adding Captions\n\nExample using caption for the first image:\n\n```jsx\n<Lightbox\n  images={LIGHTBOX_IMAGE_SET}\n  ...\n/>\n\nconst LIGHTBOX_IMAGE_SET = [\n  {\n    src: 'http://example.com/example/img1.jpg',\n    caption: 'Sydney, Australia - Photo by Jill Smith',\n  },\n  {\n    src: 'http://example.com/example/img2.jpg',\n  }\n];\n\n```\n\nNote that the caption is an entirely optional property, as can be seen in the first gallery on the [example page](http://jossmac.github.io/react-images/). The first image has a single line caption, the second demonstrates multiline, and the remaining images are without captions, entirely.\n\n## Options\n\nProperty\t|\tType\t\t|\tDefault\t\t|\tDescription\n:-----------------------|:--------------|:--------------|:--------------------------------\nbackdropClosesModal\t|\tbool\t|\tfalse\t|\tAllow users to exit the lightbox by clicking the backdrop\nenableKeyboardInput | bool  | true  | Supports keyboard input - <code>esc</code>, <code>arrow left</code>, and <code>arrow right</code>\ncurrentImage  | number  | 0 | The index of the image to display initially\ncustomControls | array | undefined | An array of elements to display as custom controls on the top of lightbox\nimages  | array | undefined | Required. An array of objects containing valid src and srcset values of img element\nimageCountSeparator  | String  | ' of ' | Customize separator in the image count\nisOpen  | bool  | false | Whether or not the lightbox is displayed\nonClickPrev | func | undefined | Fired on request of the previous image\nonClickNext | func | undefined | Fired on request of the next image\nonClose | func | undefined | Required. Handle closing of the lightbox\nonClickImage | func | undefined | Handle click on image\npreloadNextImage | bool | true | Based on the direction the user is navigating, preload the next available image\nshowCloseButton | bool  | true | Optionally display a close \"X\" button in top right corner\nshowImageCount | bool  | true | Optionally display image index, e.g., \"3 of 20\"\nwidth | number  | 1024 | Maximum width of the carousel; defaults to 1024px\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jossmac/react-images.git"
  },
  "scripts": {
    "build": "gulp clean && NODE_ENV=production gulp build",
    "bump": "gulp bump",
    "bump:major": "gulp bump:major",
    "bump:minor": "gulp bump:minor",
    "examples": "gulp dev:server",
    "lint": "eslint src/** examples/src/app.js examples/src/components/Gallery.js",
    "publish:examples": "gulp publish:examples",
    "release": "gulp release",
    "start": "gulp dev",
    "watch": "gulp watch:lib"
  },
  "version": "0.5.1"
}
