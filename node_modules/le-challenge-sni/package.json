{
  "_args": [
    [
      {
        "raw": "le-challenge-sni@https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
        "scope": null,
        "escapedName": "le-challenge-sni",
        "name": "le-challenge-sni",
        "rawSpec": "https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
        "spec": "https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
        "type": "remote"
      },
      "/home/ubuntu/workspace"
    ]
  ],
  "_from": "le-challenge-sni@>=2.0.0 <3.0.0",
  "_id": "le-challenge-sni@2.0.1",
  "_inCache": true,
  "_location": "/le-challenge-sni",
  "_phantomChildren": {},
  "_requested": {
    "raw": "le-challenge-sni@https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
    "scope": null,
    "escapedName": "le-challenge-sni",
    "name": "le-challenge-sni",
    "rawSpec": "https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
    "spec": "https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/letsencrypt"
  ],
  "_resolved": "https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
  "_shasum": "4e262f1bf52cf1d181e64bc187776b7a68c8f417",
  "_shrinkwrap": null,
  "_spec": "le-challenge-sni@https://registry.npmjs.org/le-challenge-sni/-/le-challenge-sni-2.0.1.tgz",
  "_where": "/home/ubuntu/workspace",
  "author": {
    "name": "Ben Schmidt"
  },
  "bugs": {
    "url": "https://github.com/insightfuls/le-challenge-sni/issues"
  },
  "dependencies": {
    "le-tls-sni": "^0.1.0"
  },
  "description": "A strategy for node-letsencrypt for setting, retrieving, and clearing ACME challenges by registering self-signed certs with the SNI handler.",
  "devDependencies": {},
  "homepage": "https://github.com/insightfuls/le-challenge-sni#readme",
  "keywords": [
    "le-challenge",
    "le-challenge-",
    "sni",
    "tls-sni-01",
    "tls-sni-02",
    "ACME",
    "letsencrypt",
    "certbot"
  ],
  "license": "(MIT OR Apache-2.0)",
  "main": "index.js",
  "name": "le-challenge-sni",
  "optionalDependencies": {},
  "readme": "le-challenge-sni\n================\n\nA strategy for node-letsencrypt for setting, retrieving, and clearing ACME\nchallenges by registering self-signed certs with the SNI handler.\n\nIt is designed to handle tls-sni-01 and tls-sni-02 challenges.\n\nInstall\n-------\n\n```bash\nnpm install --save le-challenge-sni@2.x\n```\n\nUsage\n-----\n\n```javascript\nvar leChallenge = require('le-challenge-sni').create({\n  debug: false\n});\n\nvar LE = require('letsencrypt');\n\nLE.create({\n  server: LE.stagingServerUrl\n, challenge: leChallenge\n});\n```\n\n`le-challenge-sni` requires the `sni` option to `letsencrypt` to have\n`cacheCerts` and `uncacheCerts` methods. These are used to register/unregister\nthe certificates. The default `le-sni-auto` instance satisfies this\nrequirement.\n\nIt also requires the `challengeType` option to `letsencrypt` to be either\n`tls-sni-01` or `tls-sni-02` and will generate and register certificates\naccordingly.\n\nExposed Methods\n---------------\n\nFor ACME Challenge:\n\n* `set(opts, domain, key, val, done)`\n* `get(defaults, domain, key, done)`\n* `remove(defaults, domain, key, done)`\n\nFor node-letsencrypt internals:\n\n* `getOptions()` returns the user supplied options, if any (no effect)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/insightfuls/le-challenge-sni.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "2.0.1"
}
