{
  "_args": [
    [
      {
        "raw": "dnd-core@https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
        "scope": null,
        "escapedName": "dnd-core",
        "name": "dnd-core",
        "rawSpec": "https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
        "spec": "https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
        "type": "remote"
      },
      "/home/ubuntu/workspace"
    ]
  ],
  "_from": "dnd-core@>=2.0.1 <3.0.0",
  "_id": "dnd-core@2.2.3",
  "_inCache": true,
  "_location": "/dnd-core",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dnd-core@https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
    "scope": null,
    "escapedName": "dnd-core",
    "name": "dnd-core",
    "rawSpec": "https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
    "spec": "https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/react-dnd"
  ],
  "_resolved": "https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
  "_shasum": "91acba9e1a377be1e9a02e890dcd9907ac9eb829",
  "_shrinkwrap": null,
  "_spec": "dnd-core@https://registry.npmjs.org/dnd-core/-/dnd-core-2.2.3.tgz",
  "_where": "/home/ubuntu/workspace",
  "dependencies": {
    "asap": "^2.0.3",
    "invariant": "^2.0.0",
    "lodash": "^4.2.0",
    "redux": "^3.2.0"
  },
  "description": "Drag and drop sans the GUI",
  "devDependencies": {},
  "main": "lib/index.js",
  "name": "dnd-core",
  "optionalDependencies": {},
  "readme": "[![npm package](https://img.shields.io/npm/v/dnd-core.svg?style=flat-square)](https://www.npmjs.org/package/dnd-core)\n[![Build Status](https://travis-ci.org/react-dnd/dnd-core.svg?branch=master)](https://travis-ci.org/react-dnd/dnd-core)\n[![Test Coverage](https://codeclimate.com/github/react-dnd/dnd-core/badges/coverage.svg)](https://codeclimate.com/github/react-dnd/dnd-core)\n[![bitHound Overall Score](https://www.bithound.io/github/react-dnd/dnd-core/badges/score.svg)](https://www.bithound.io/github/react-dnd/dnd-core)\n[![bitHound Code](https://www.bithound.io/github/react-dnd/dnd-core/badges/code.svg)](https://www.bithound.io/github/react-dnd/dnd-core)\n[![bitHound Dependencies](https://www.bithound.io/github/react-dnd/dnd-core/badges/dependencies.svg)](https://www.bithound.io/github/react-dnd/dnd-core/master/dependencies/npm)\n[![bitHound Dev Dependencies](https://www.bithound.io/github/react-dnd/dnd-core/badges/devDependencies.svg)](https://www.bithound.io/github/react-dnd/dnd-core/master/dependencies/npm)\n\n# dnd-core\n\nDrag and drop sans the GUI.\n\nThis is a clean implementation of drag and drop primitives that does not depend on the browser.\nIt powers [React DnD](https://github.com/react-dnd/react-dnd) internally.\n\n## Wat?\n\nTo give you a better idea:\n\n* There is no DOM here\n* We let you define drop target and drag source logic\n* We let you supply custom underlying implementations (console, DOM via jQuery, React, React Native, *whatever*)\n* We manage drag source and drop target interaction\n\nThis was written to support some rather complicated scenarios that were too hard to implement in [React DnD](https://github.com/react-dnd/react-dnd) due to its current architecture:\n\n* [Mocking drag and drop interaction in tests](https://github.com/react-dnd/react-dnd/issues/55)\n* [Full support for arbitrary nesting and handling drag sources and drop targets](https://github.com/react-dnd/react-dnd/issues/87)\n* [Dragging multiple items at once](https://github.com/react-dnd/react-dnd/issues/14)\n* [Even when source is removed, letting another drag source “represent it” (e.g. card disappeared from one Kanban list, reappeared in another one)](https://github.com/react-dnd/react-dnd/pull/64#issuecomment-76118757)\n\nAs it turns out, these problems are much easier to solve when DOM is thrown out of the window.\n\n## What's the API like?\n\n[Tests](https://github.com/react-dnd/dnd-core/tree/master/test) should give you some idea. You register drag sources and drop targets, hook up a backend (you can use barebone `TestBackend` or implement a fancy real one yourself), and your drag sources and drop targets magically begin to interact.\n\n![](http://i.imgur.com/6l8CpxZ.png)\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "babel src --out-dir lib",
    "clean": "rimraf lib",
    "prepublish": "npm run test",
    "test": "npm-run-all clean build"
  },
  "version": "2.2.3"
}
